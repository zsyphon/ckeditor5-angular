{"version":3,"file":"ckeditor-ckeditor5-angular.js","sources":["../../src/ckeditor/ckeditor.ts","../../src/ckeditor/uid.ts","../../src/ckeditor/ckeditor.component.ts","../../src/ckeditor/ckeditor.module.ts","../../src/ckeditor/index.ts","../../src/ckeditor/ckeditor-ckeditor5-angular.ts"],"sourcesContent":["/**\r\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md.\r\n */\r\n\r\ntype AnyFunction = ( ...args: any[] ) => any;\r\n\r\n/**\r\n * Basic typings for the CKEditor5 elements.\r\n */\r\nexport namespace CKEditor5 {\r\n\r\n\t/**\r\n\t * The CKEditor5 editor config.\r\n\t */\r\n\texport interface Config {\r\n\t\t[ key: string ]: any;\r\n\t}\r\n\r\n\t/**\r\n\t * The event object passed to CKEditor5 event callbacks.\r\n\t *\r\n\t * See https://ckeditor.com/docs/ckeditor5/latest/api/module_utils_eventinfo-EventInfo.html\r\n\t */\r\n\texport interface EventInfo<EventName extends string> {\r\n\t\treadonly name: EventName;\r\n\t\treadonly path: any[];\r\n\t\treadonly source: any;\r\n\t\treturn?: any;\r\n\r\n\t\toff(): void;\r\n\t\tstop(): void;\r\n\t}\r\n\r\n\t/**\r\n\t * The base Editor class.\r\n\t *\r\n\t * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html\r\n\t */\r\n\texport interface BaseEditor {\r\n\t\treadonly commands: any;\r\n\t\treadonly config: any;\r\n\t\treadonly conversion: any;\r\n\t\treadonly data: any;\r\n\t\treadonly editing: any;\r\n\t\treadonly keystrokes: any;\r\n\t\treadonly locale: any;\r\n\t\treadonly model: any;\r\n\t\treadonly plugins: any;\r\n\t\treadonly state: 'initializing' | 'ready' | 'destroyed';\r\n\r\n\t\tisReadOnly: boolean;\r\n\r\n\t\tdelegate( events: string[] ): any;\r\n\t\tdestroy(): Promise<void>;\r\n\t\texecute( commandName: string, ...params: any[] ): any;\r\n\t\tfire( eventName: string, args?: any ): any;\r\n\t\tlistenTo( emitter: any, eventName: string, callback: AnyFunction, options?: any ): void;\r\n\t\toff( eventName: string, callback: AnyFunction ): void;\r\n\t\ton( eventName: string, callback: AnyFunction, options?: any ): void;\r\n\t\tonce( eventName: string, callback: AnyFunction, options?: any ): void;\r\n\t\tstopListening( emitter: any, eventName: string, callback: AnyFunction ): void;\r\n\t\tt( ...args: any[] ): void;\r\n\r\n\t\t[ property: string ]: any;\r\n\t}\r\n\r\n\t/**\r\n\t * The CKEditor5 DataApi interface.\r\n\t *\r\n\t * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_utils_dataapimixin-DataApi.html.\r\n\t */\r\n\texport interface DataApi {\r\n\t\tgetData(): string;\r\n\t\tsetData( data: string ): void;\r\n\t}\r\n\r\n\t/**\r\n\t * A CKEditor5 editor that implements the\r\n\t * [DataApi interface](https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_utils_dataapimixin-DataApi.html).\r\n\t * E.g. the `ClassicEditor`, `InlineEditor`, etc.\r\n\t */\r\n\texport interface Editor extends BaseEditor, DataApi {}\r\n\r\n\t/**\r\n\t * The CKEditor5 editor constructor.\r\n\t */\r\n\texport interface EditorConstructor {\r\n\t\tcreate( sourceElementOrData: HTMLElement | string, config?: Config ): Promise<Editor>;\r\n\t}\r\n\r\n\texport interface Watchdog<T> {\r\n\t\tsetCreator( creator: ( ...args: any[] ) => Promise<T> ): void;\r\n\t\tsetDestructor( destructor: ( item: T ) => Promise<void> ): void;\r\n\t\ton( event: string, callback: ( ...args: any[] ) => any ): void;\r\n\t\tdestroy(): Promise<void>;\r\n\t\tcreate( ...args: any[] ): Promise<void>;\r\n\t}\r\n\r\n\texport interface EditorWatchdog extends Watchdog<Editor> {\r\n\t\teditor: Editor;\r\n\t}\r\n\r\n\texport interface ContextWatchdog extends Watchdog<any> {\r\n\t\tcontext: any;\r\n\t\t_watchdogs: Map<string, EditorWatchdog>;\r\n\t\tadd( items: any ): Promise<void>;\r\n\t\tremove( items: string | string[] ): Promise<void>;\r\n\t\tgetItem( itemId: string ): Editor;\r\n\t\taddItemWatchdog( itemId: string, itemType: string, watchdog: Watchdog<any> ): Promise<void>;\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\r\n */\r\n\r\n// A copy of @ckeditor/ckeditor5-utils/src/uid.js\r\n\r\n// A hash table of hex numbers to avoid using toString() in uid() which is costly.\r\n// [ '00', '01', '02', ..., 'fe', 'ff' ]\r\nconst HEX_NUMBERS = new Array( 256 ).fill( 0 )\r\n\t.map( ( val, index ) => ( '0' + ( index ).toString( 16 ) ).slice( -2 ) );\r\n\r\n/**\r\n * Returns a unique id. The id starts with an \"e\" character and a randomly generated string of\r\n * 32 alphanumeric characters.\r\n *\r\n * **Note**: The characters the unique id is built from correspond to the hex number notation\r\n * (from \"0\" to \"9\", from \"a\" to \"f\"). In other words, each id corresponds to an \"e\" followed\r\n * by 16 8-bit numbers next to each other.\r\n *\r\n * @returns An unique id string.\r\n */\r\nexport default function uid(): string {\r\n\t// Let's create some positive random 32bit integers first.\r\n\t//\r\n\t// 1. Math.random() is a float between 0 and 1.\r\n\t// 2. 0x100000000 is 2^32 = 4294967296.\r\n\t// 3. >>> 0 enforces integer (in JS all numbers are floating point).\r\n\t//\r\n\t// For instance:\r\n\t//\t\tMath.random() * 0x100000000 = 3366450031.853859\r\n\t// but\r\n\t//\t\tMath.random() * 0x100000000 >>> 0 = 3366450031.\r\n\tconst r1 = Math.random() * 0x100000000 >>> 0;\r\n\tconst r2 = Math.random() * 0x100000000 >>> 0;\r\n\tconst r3 = Math.random() * 0x100000000 >>> 0;\r\n\tconst r4 = Math.random() * 0x100000000 >>> 0;\r\n\r\n\t// Make sure that id does not start with number.\r\n\treturn 'e' +\r\n\t\tHEX_NUMBERS[ r1 >> 0 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r1 >> 8 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r1 >> 16 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r1 >> 24 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r2 >> 0 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r2 >> 8 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r2 >> 16 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r2 >> 24 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r3 >> 0 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r3 >> 8 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r3 >> 16 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r3 >> 24 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r4 >> 0 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r4 >> 8 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r4 >> 16 & 0xFF ] +\r\n\t\tHEX_NUMBERS[ r4 >> 24 & 0xFF ];\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md.\r\n */\r\n\r\nimport {\r\n\tComponent,\r\n\tInput,\r\n\tOutput,\r\n\tNgZone,\r\n\tEventEmitter,\r\n\tforwardRef,\r\n\tAfterViewInit,  OnChanges, OnDestroy, SimpleChanges,\r\n\tElementRef\r\n} from '@angular/core';\r\n\r\nimport EditorWatchdog from '@ckeditor/ckeditor5-watchdog/src/editorwatchdog';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport uid from './uid';\r\n\r\nimport {\r\n\tControlValueAccessor,\r\n\tNG_VALUE_ACCESSOR\r\n} from '@angular/forms';\r\n\r\nimport { CKEditor5 } from './ckeditor';\r\n\r\nexport interface BlurEvent {\r\n\tevent: CKEditor5.EventInfo<'blur'>;\r\n\teditor: CKEditor5.Editor;\r\n}\r\n\r\nexport interface FocusEvent {\r\n\tevent: CKEditor5.EventInfo<'focus'>;\r\n\teditor: CKEditor5.Editor;\r\n}\r\n\r\nexport interface ChangeEvent {\r\n\tevent: CKEditor5.EventInfo<'change:data'>;\r\n\teditor: CKEditor5.Editor;\r\n}\r\n\r\n@Component( {\r\n\tselector: 'ckeditor',\r\n\ttemplate: '<ng-template></ng-template>',\r\n\r\n\t// Integration with @angular/forms.\r\n\tproviders: [\r\n\t\t{\r\n\t\t\tprovide: NG_VALUE_ACCESSOR,\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n\t\t\tuseExisting: forwardRef( () => CKEditorComponent ),\r\n\t\t\tmulti: true\r\n\t\t}\r\n\t]\r\n} )\r\nexport class CKEditorComponent implements AfterViewInit, OnDestroy,OnChanges, ControlValueAccessor {\r\n\t/**\r\n\t * The reference to the DOM element created by the component.\r\n\t */\r\n\tprivate elementRef!: ElementRef<HTMLElement>;\r\n\r\n\t/**\r\n\t * The constructor of the editor to be used for the instance of the component.\r\n\t * It can be e.g. the `ClassicEditorBuild`, `InlineEditorBuild` or some custom editor.\r\n\t */\r\n\t@Input() public editor?: CKEditor5.EditorConstructor;\r\n\r\n\t/**\r\n\t * The configuration of the editor.\r\n\t * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editorconfig-EditorConfig.html\r\n\t * to learn more.\r\n\t */\r\n\t@Input() public config: CKEditor5.Config = {};\r\n\r\n\t/**\r\n\t * The initial data of the editor. Useful when not using the ngModel.\r\n\t * See https://angular.io/api/forms/NgModel to learn more.\r\n\t */\r\n\t@Input() public data = '';\r\n\r\n\t/**\r\n\t * Tag name of the editor component.\r\n\t *\r\n\t * The default tag is 'div'.\r\n\t */\r\n\t@Input() public tagName = 'div';\r\n\r\n\t/**\r\n\t * The context watchdog.\r\n\t */\r\n\t@Input() public watchdog?: CKEditor5.ContextWatchdog;\r\n\r\n\t/**\r\n\t * When set `true`, the editor becomes read-only.\r\n\t * See https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#member-isReadOnly\r\n\t * to learn more.\r\n\t */\r\n\t@Input() public set disabled( isDisabled: boolean ) {\r\n\t\tthis.setDisabledState( isDisabled );\r\n\t}\r\n\r\n\tpublic get disabled(): boolean {\r\n\t\tif ( this.editorInstance ) {\r\n\t\t\treturn this.editorInstance.isReadOnly;\r\n\t\t}\r\n\r\n\t\treturn this.initiallyDisabled;\r\n\t}\r\n\r\n\t/**\r\n\t * Fires when the editor is ready. It corresponds with the `editor#ready`\r\n\t * https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editor-Editor.html#event-ready\r\n\t * event.\r\n\t */\r\n\t@Output() public ready = new EventEmitter<CKEditor5.Editor>();\r\n\r\n\t/**\r\n\t * Fires when the content of the editor has changed. It corresponds with the `editor.model.document#change`\r\n\t * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_model_document-Document.html#event-change\r\n\t * event.\r\n\t */\r\n\t@Output() public change: EventEmitter<ChangeEvent> = new EventEmitter<ChangeEvent>();\r\n\r\n\t/**\r\n\t * Fires when the editing view of the editor is blurred. It corresponds with the `editor.editing.view.document#blur`\r\n\t * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:blur\r\n\t * event.\r\n\t */\r\n\t@Output() public blur: EventEmitter<BlurEvent> = new EventEmitter<BlurEvent>();\r\n\r\n\t/**\r\n\t * Fires when the editing view of the editor is focused. It corresponds with the `editor.editing.view.document#focus`\r\n\t * https://ckeditor.com/docs/ckeditor5/latest/api/module_engine_view_document-Document.html#event-event:focus\r\n\t * event.\r\n\t */\r\n\t@Output() public focus: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\r\n\r\n\t/**\r\n\t * Fires when the editor component crashes.\r\n\t */\r\n\t@Output() public error: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n\t/**\r\n\t * The instance of the editor created by this component.\r\n\t */\r\n\tpublic get editorInstance(): CKEditor5.Editor | null {\r\n\t\tlet editorWatchdog = this.editorWatchdog;\r\n\r\n\t\tif ( this.watchdog ) {\r\n\t\t\t// Temporarily use the `_watchdogs` internal map as the `getItem()` method throws\r\n\t\t\t// an error when the item is not registered yet.\r\n\t\t\t// See https://github.com/ckeditor/ckeditor5-angular/issues/177.\r\n\t\t\teditorWatchdog = this.watchdog._watchdogs.get( this.id );\r\n\t\t}\r\n\r\n\t\tif ( editorWatchdog ) {\r\n\t\t\treturn editorWatchdog.editor;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * The editor watchdog. It is created when the context watchdog is not passed to the component.\r\n\t * It keeps the editor running.\r\n\t */\r\n\tprivate editorWatchdog?: CKEditor5.EditorWatchdog;\r\n\r\n\t/**\r\n\t * If the component is read–only before the editor instance is created, it remembers that state,\r\n\t * so the editor can become read–only once it is ready.\r\n\t */\r\n\tprivate initiallyDisabled = false;\r\n\r\n\t/**\r\n\t * An instance of https://angular.io/api/core/NgZone to allow the interaction with the editor\r\n\t * withing the Angular event loop.\r\n\t */\r\n\tprivate ngZone: NgZone;\r\n\r\n\t/**\r\n\t * A callback executed when the content of the editor changes. Part of the\r\n\t * `ControlValueAccessor` (https://angular.io/api/forms/ControlValueAccessor) interface.\r\n\t *\r\n\t * Note: Unset unless the component uses the `ngModel`.\r\n\t */\r\n\tprivate cvaOnChange?: ( data: string ) => void;\r\n\r\n\t/**\r\n\t * A callback executed when the editor has been blurred. Part of the\r\n\t * `ControlValueAccessor` (https://angular.io/api/forms/ControlValueAccessor) interface.\r\n\t *\r\n\t * Note: Unset unless the component uses the `ngModel`.\r\n\t */\r\n\tprivate cvaOnTouched?: () => void;\r\n\r\n\t/**\r\n\t * Reference to the source element used by the editor.\r\n\t */\r\n\tprivate editorElement?: HTMLElement;\r\n\r\n\t/**\r\n\t * A lock flag preventing from calling the `cvaOnChange()` during setting editor data.\r\n\t */\r\n\tprivate isEditorSettingData = false;\r\n\r\n\tprivate id = uid();\r\n\r\n\tpublic constructor( elementRef: ElementRef, ngZone: NgZone ) {\r\n\t\tthis.ngZone = ngZone;\r\n\t\tthis.elementRef = elementRef;\r\n\t}\r\n\r\n\t/**\r\n\t *Implementing the OnChanges interface.\r\n\t *Whenever 'data' property changes we need to update the contents of the editor.\r\n\t*/\r\n\tpublic ngOnChanges( changes: SimpleChanges ): void {\r\n\t\tif ( Object.prototype.hasOwnProperty.call( changes, 'data' ) && changes.data && !changes.data.isFirstChange() ) {\r\n\t\t\tthis.writeValue( changes.data.currentValue );\r\n\t\t}\r\n\t}\r\n\r\n\t// Implementing the AfterViewInit interface.\r\n\tpublic ngAfterViewInit(): void {\r\n\t\tthis.attachToWatchdog();\r\n\t}\r\n\r\n\t// Implementing the OnDestroy interface.\r\n\tpublic async ngOnDestroy(): Promise<void> {\r\n\t\tif ( this.watchdog ) {\r\n\t\t\tawait this.watchdog.remove( this.id );\r\n\t\t} else if ( this.editorWatchdog && this.editorWatchdog.editor ) {\r\n\t\t\tawait this.editorWatchdog.destroy();\r\n\r\n\t\t\tthis.editorWatchdog = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t// Implementing the ControlValueAccessor interface (only when binding to ngModel).\r\n\tpublic writeValue( value: string | null ): void {\r\n\t\t// This method is called with the `null` value when the form resets.\r\n\t\t// A component's responsibility is to restore to the initial state.\r\n\t\tif ( value === null ) {\r\n\t\t\tvalue = '';\r\n\t\t}\r\n\r\n\t\t// If already initialized.\r\n\t\tif ( this.editorInstance ) {\r\n\t\t\t// The lock mechanism prevents from calling `cvaOnChange()` during changing\r\n\t\t\t// the editor state. See #139\r\n\t\t\tthis.isEditorSettingData = true;\r\n\t\t\tthis.editorInstance.setData( value );\r\n\t\t\tthis.isEditorSettingData = false;\r\n\t\t}\r\n\t\t// If not, wait for it to be ready; store the data.\r\n\t\telse {\r\n\t\t\t// If the editor element is already available, then update its content.\r\n\t\t\tthis.data = value;\r\n\r\n\t\t\t// If not, then wait until it is ready\r\n\t\t\t// and change data only for the first `ready` event.\r\n\t\t\tthis.ready\r\n\t\t\t\t.pipe( first() )\r\n\t\t\t\t.subscribe( ( editor: CKEditor5.Editor ) => {\r\n\t\t\t\t\teditor.setData( this.data );\r\n\t\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\t// Implementing the ControlValueAccessor interface (only when binding to ngModel).\r\n\tpublic registerOnChange( callback: ( data: string ) => void ): void {\r\n\t\tthis.cvaOnChange = callback;\r\n\t}\r\n\r\n\t// Implementing the ControlValueAccessor interface (only when binding to ngModel).\r\n\tpublic registerOnTouched( callback: () => void ): void {\r\n\t\tthis.cvaOnTouched = callback;\r\n\t}\r\n\r\n\t// Implementing the ControlValueAccessor interface (only when binding to ngModel).\r\n\tpublic setDisabledState( isDisabled: boolean ): void {\r\n\t\t// If already initialized.\r\n\t\tif ( this.editorInstance ) {\r\n\t\t\tthis.editorInstance.isReadOnly = isDisabled;\r\n\t\t}\r\n\r\n\t\t// Store the state anyway to use it once the editor is created.\r\n\t\tthis.initiallyDisabled = isDisabled;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates the editor instance, sets initial editor data, then integrates\r\n\t * the editor with the Angular component. This method does not use the `editor.setData()`\r\n\t * because of the issue in the collaboration mode (#6).\r\n\t */\r\n\tprivate attachToWatchdog() {\r\n\t\tconst creator = async ( element: HTMLElement, config: CKEditor5.Config ) => {\r\n\t\t\treturn this.ngZone.runOutsideAngular( async () => {\r\n\t\t\t\tthis.elementRef.nativeElement.appendChild( element );\r\n\r\n\t\t\t\tconst editor = await this.editor!.create( element, config );\r\n\r\n\t\t\t\tif ( this.initiallyDisabled ) {\r\n\t\t\t\t\teditor.isReadOnly = this.initiallyDisabled;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.ngZone.run( () => {\r\n\t\t\t\t\tthis.ready.emit( editor );\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tthis.setUpEditorEvents( editor );\r\n\r\n\t\t\t\treturn editor;\r\n\t\t\t} );\r\n\t\t};\r\n\r\n\t\tconst destructor = async ( editor: CKEditor5.Editor ) => {\r\n\t\t\tawait editor.destroy();\r\n\r\n\t\t\tthis.elementRef.nativeElement.removeChild( this.editorElement! );\r\n\t\t};\r\n\r\n\t\tconst emitError = () => {\r\n\t\t\tthis.ngZone.run( () => {\r\n\t\t\t\tthis.error.emit();\r\n\t\t\t} );\r\n\t\t};\r\n\r\n\t\tconst element = document.createElement( this.tagName );\r\n\t\tconst config = this.getConfig();\r\n\r\n\t\tthis.editorElement = element;\r\n\r\n\t\t// Based on the presence of the watchdog decide how to initialize the editor.\r\n\t\tif ( this.watchdog ) {\r\n\t\t\t// When the context watchdog is passed add the new item to it based on the passed configuration.\r\n\t\t\tthis.watchdog.add( {\r\n\t\t\t\tid: this.id,\r\n\t\t\t\ttype: 'editor',\r\n\t\t\t\tcreator,\r\n\t\t\t\tdestructor,\r\n\t\t\t\tsourceElementOrData: element,\r\n\t\t\t\tconfig\r\n\t\t\t} );\r\n\r\n\t\t\tthis.watchdog.on( 'itemError', ( _, { itemId } ) => {\r\n\t\t\t\tif ( itemId === this.id ) {\r\n\t\t\t\t\temitError();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} else {\r\n\t\t\t// In the other case create the watchdog by hand to keep the editor running.\r\n\t\t\tconst editorWatchdog: CKEditor5.EditorWatchdog = new EditorWatchdog( this.editor );\r\n\r\n\t\t\teditorWatchdog.setCreator( creator );\r\n\t\t\teditorWatchdog.setDestructor( destructor );\r\n\t\t\teditorWatchdog.on( 'error', emitError );\r\n\r\n\t\t\tthis.editorWatchdog = editorWatchdog;\r\n\r\n\t\t\tthis.editorWatchdog.create( element, config );\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getConfig() {\r\n\t\tif ( this.data && this.config.initialData ) {\r\n\t\t\tthrow new Error( 'Editor data should be provided either using `config.initialData` or `data` properties.' );\r\n\t\t}\r\n\r\n\t\tconst config = { ...this.config };\r\n\r\n\t\t// Merge two possible ways of providing data into the `config.initialData` field.\r\n\t\tconst initialData = this.config.initialData || this.data;\r\n\r\n\t\tif ( initialData ) {\r\n\t\t\t// Define the `config.initialData` only when the initial content is specified.\r\n\t\t\tconfig.initialData = initialData;\r\n\t\t}\r\n\r\n\t\treturn config;\r\n\t}\r\n\r\n\t/**\r\n\t * Integrates the editor with the component by attaching related event listeners.\r\n\t */\r\n\tprivate setUpEditorEvents( editor: CKEditor5.Editor ): void {\r\n\t\tconst modelDocument = editor.model.document;\r\n\t\tconst viewDocument = editor.editing.view.document;\r\n\r\n\t\tmodelDocument.on( 'change:data', ( evt: CKEditor5.EventInfo<'change:data'> ) => {\r\n\t\t\tthis.ngZone.run( () => {\r\n\t\t\t\tif ( this.cvaOnChange && !this.isEditorSettingData ) {\r\n\t\t\t\t\tconst data = editor.getData();\r\n\r\n\t\t\t\t\tthis.cvaOnChange( data );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.change.emit( { event: evt, editor } );\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t\tviewDocument.on( 'focus', ( evt: CKEditor5.EventInfo<'focus'> ) => {\r\n\t\t\tthis.ngZone.run( () => {\r\n\t\t\t\tthis.focus.emit( { event: evt, editor } );\r\n\t\t\t} );\r\n\t\t} );\r\n\r\n\t\tviewDocument.on( 'blur', ( evt: CKEditor5.EventInfo<'blur'> ) => {\r\n\t\t\tthis.ngZone.run( () => {\r\n\t\t\t\tif ( this.cvaOnTouched ) {\r\n\t\t\t\t\tthis.cvaOnTouched();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.blur.emit( { event: evt, editor } );\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n}\r\n","/**\r\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md.\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CKEditorComponent } from './ckeditor.component';\r\n\r\n@NgModule( {\r\n\timports: [ FormsModule, CommonModule ],\r\n\tdeclarations: [ CKEditorComponent ],\r\n\texports: [ CKEditorComponent ]\r\n} )\r\nexport class CKEditorModule {}\r\n","/**\r\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\r\n * For licensing, see LICENSE.md.\r\n */\r\n\r\nexport * from './ckeditor';\r\nexport * from './ckeditor.component';\r\nexport * from './ckeditor.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}